name: Gate

on: [push, pull_request, workflow_dispatch]

env:
  FORCE_COLOR: 1

jobs:
  gate:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.6", "3.10"]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --progress-bar=off -r requirements_gate.txt
          pip --version

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          mkdir report
          pytest tests/ --doctest-modules --junitxml=report/${{ matrix.os }}-${{ matrix.python-version }}/junit.xml --cov=szitas_logger --cov-branch --cov-report=xml --cov-report=html
          mv htmlcov/* report/${{ matrix.os }}-${{ matrix.python-version }}/
          mv report/*.log report/${{ matrix.os }}-${{ matrix.python-version }}/
          mv *coverage* report/${{ matrix.os }}-${{ matrix.python-version }}/

      - name: Upload pytest results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results
          path: report
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
